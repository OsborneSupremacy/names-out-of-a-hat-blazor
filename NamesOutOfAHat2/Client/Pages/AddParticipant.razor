@using NamesOutOfAHat2.Model
@using NamesOutOfAHat2.Utility

@if(Visible) {
    <EditForm Model="@Person" OnValidSubmit="@CommitParticipantAddAsync">
        <div class="card mb-3" style="width: 18rem;display: inline-flex;margin: 10px;">
            <h5 class="card-header bg-info">@Person.WriteDisplayName()</h5>
            <div class="card-body">
                <div class="form-floating mb-3">
                    <input type="text" class="form-control" @bind-value="Person.Name" />
                    <label for="Name">Name</label>
                </div>
                <div class="form-floating mb-3">
                    <input type="email" class="form-control" @bind-value="Person.Email" />
                    <label for="Email">Email</label>
                </div>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <button type="submit" class="btn btn-sm btn-primary">Add</button>&nbsp;
                <a href="#" class="btn btn-sm btn-danger" @onclick="CancelCallback" >Cancel</a>
            </div>
        </div>
    </EditForm>
}

@code {

    [Parameter, EditorRequired]
    public bool Visible { get; set; }

    [Parameter, EditorRequired]
    public Person Person { get; set; }

    [Parameter, EditorRequired]
    public EventCallback<Person> PersonAddedCallback { get; set; }

    [Parameter, EditorRequired]
    public EventCallback CancelCallback { get; set; }

    public async Task CommitParticipantAddAsync()
    {
        Person.Id = System.Guid.NewGuid();
        await PersonAddedCallback.InvokeAsync(Person);
    }
}
