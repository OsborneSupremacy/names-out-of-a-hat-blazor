@inject NamesOutOfAHat2.Client.Service.ClientMessenger ClientMessenger
@inject NavigationManager NavigationManager

@using NamesOutOfAHat2.Model

<SectionHeading Text="We Need to Verify the Email Address of the Organizer" Lead="We're not going to add you to any email lists. This is only to prevent abuse." />

<p class="lead">A code will be sent to @Hat.Organizer.Person.Name at @Hat.Organizer.Person.Email.</p>

<ButtonArea>
    <PrimaryButton ClickedCallback="SendCodeAndAdvance" Text="Looks Good. Send the Code!" />
    <BackButton ClickedCallback="PreviousCallback" Text="Go Back" />
</ButtonArea>

@code {

    [Parameter, EditorRequired]
    public Hat Hat { get; set; }

    [Parameter, EditorRequired]
    public EventCallback NextCallback { get; set; }

    [Parameter, EditorRequired]
    public EventCallback PreviousCallback { get; set; }

    async Task SendCodeAndAdvance()
    {
        var (success, details) = await ClientMessenger.SendVerificationAsync(NavigationManager, Hat);

        if (success)
            await NextCallback.InvokeAsync();

        // TODO: Invoke an error callback on error
    }
}
