@using NamesOutOfAHat2.Model
@using NamesOutOfAHat2.Utility

@if(Visible)
{
    <SectionHeading Visible="true" Text="The Hat Was Shaken, and Names Were Picked Successfully!" Lead="Does everything below look good?" />

    @foreach(var participant in Hat.Participants)
    {
        <div class="card mb-3" style="width: 18rem;display: inline-flex;margin: 10px;">
            <h5 class="card-header bg-info">@participant.Person.Name.GetPersonEmojiFor() @participant.Person.Name</h5>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">📧 @participant.Person.Email</li>
                <li class="list-group-item">
                    <label class="form-label"><b>🎁 Eligible Recipients <i class="bi bi-question-circle"></i></b></label>
                    @foreach (var recipient in participant.Recipients.Where(x => x.Eligible))
                    {
                        <div style="text-align: left">
                            @recipient.Person.Name.GetPersonEmojiFor() @recipient.Person.Name
                        </div>
                    }
                </li>
            </ul>
        </div>
    }

    <ButtonArea>
        <PrimaryButton ClickedCallback="NextCallback" Text="Everything Looks Good. Continue." />
        <BackButton ClickedCallback="PreviousCallback" Text="Go Back" />
    </ButtonArea>
}

@code {

    [Parameter, EditorRequired]
    public bool Visible { get; set; }

    [Parameter, EditorRequired]
    public Hat Hat { get; set; } = default!;

    [Parameter, EditorRequired]
    public EventCallback NextCallback { get; set; }

    [Parameter, EditorRequired]
    public EventCallback PreviousCallback { get; set; }

}
