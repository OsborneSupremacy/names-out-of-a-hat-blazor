@using NamesOutOfAHat2.Model
@using NamesOutOfAHat2.Utility

@inject NavigationManager NavigationManager
@inject NamesOutOfAHat2.Client.Service.ClientHttpService ClientHttpService

@if(Visible)
{
    <SectionHeading Visible="true" Text="Enter Your Confirmation Code" Lead="Please be patient as your code is delivered via email. Check your junk mail and other folders." />

    <div class="mb-3">
        <input type="text" class="form-control" @bind-value="_code" placeholder="Verification Code" ng-maxlength="100" />
    </div>

    @if(_invalidCode)
    {
        <div class="alert alert-danger" role="alert">
            Invalid Code
        </div>
    }

    <ButtonArea>
        <PrimaryButton ClickedCallback="VerifyAsync" Text="Verify" />
        <BackButton ClickedCallback="PreviousCallback" Text="Go Back" />
    </ButtonArea>
}

@code {

    [Parameter, EditorRequired]
    public bool Visible { get; set; }

    [Parameter, EditorRequired]
    public Hat Hat { get; set; }

    private string _code = default!;

    private bool _invalidCode = false;

    private async Task VerifyAsync()
    {
        _invalidCode = false;

        var result = await ClientHttpService.VerifyAsync(NavigationManager, Hat.ToRegistration(_code));

        if (result.success)
            await NextCallback.InvokeAsync();
        else
        {
            await Task.Delay(3000);
            _invalidCode = true;
        }
    }

    [Parameter, EditorRequired]
    public EventCallback NextCallback { get; set; }

    [Parameter, EditorRequired]
    public EventCallback PreviousCallback { get; set; }

}
